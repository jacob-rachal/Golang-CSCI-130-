// Jacob Rachal 3-5-16  5/29/16
// CSCI 130 Fresno State

// projecteuler.net problem #2 (doing this one instead)
/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 find the sum of the even-valued terms.
*/
package main
import(
	"fmt"
)
func evenFibonacciFinder() func()int{
	a:=1; b:=1;
	return func()int{
		result := a+b;
		a=b; //this step and the next is for moving up the list of Fib numbers.
		b=result;
		if result%2 == 0{
			return result // because then result is an even number
		}else{
			return 0 // in which case result is an odd number
		}
	}
}
func main(){
	eFibRes := evenFibonacciFinder()

	totsum :=0;
	for true{
		temp := eFibRes(); //having the () right after eFibRes is important, because otherwise temp is set as a func() int rather than as an int.
		if temp > 4000000{
			break
		}else{
			totsum +=temp;
		}
	}
	fmt.Println(totsum) //print out our answer to the terminal.
}